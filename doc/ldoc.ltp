<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <title>$(ldoc.title)</title>
    <link rel="stylesheet" href="$(ldoc.css)" type="text/css" />
    <link rel="stylesheet"
    href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
    <script
    src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js">
    </script>
    <script
    src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js">
    </script>
</head>
<body>

  <div class="container">

#   local function vspace(n)
#     return '<div class="row" style="height:'..n..'em"></div>'
#   end
  
    <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container-fluid">
        <div class="row">
          <div class="col-xs-0 col-md-1 col-lg-2"></div>
          <div class="col-xs-12 col-md-10 col-lg-8">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse"
                      data-target="#luxNavbar">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              <a class="navbar-brand" href="../index.html">
                Lua Utility eXtension
              </a>
            </div>
            <div class="collapse navbar-collapse" id="luxNavbar">
              <ul class="nav navbar-nav">
#               local this_mod = module and module.name
#               -- The following code ensures navbar link order
#               local kinds = {
#                 Modules = 1, Classes = 2, Prototypes = 3, Examples = 4
#               }
#               for kind, mods, type in ldoc.kinds() do
#                 kinds[kinds[kind]] = {kind, mods, type}
#               end
#               for i=1,#kinds do
#                 local kind, mods, type = kinds[i][1], kinds[i][2], kinds[i][3]
#                 if ldoc.allowed_in_contents(type,module) then
                    <li class="dropdown">
                      <a class="dropdown-toggle" data-toggle="dropdown"
                         href="#">
                        $(kind)
                        <span class="caret"></span>
                      </a>
                      <ul class="dropdown-menu">
#                       for mod in mods() do
#                         local name = ldoc.display_name(mod)
                          <li
                            $(mod.name == this_mod and 'class="active"' or '')>
                            <a href="$(ldoc.ref_to_module(mod))">
                              $(name)
                            </a>
                          </li>
#                       end
                      </ul>
                    </li>
#                 end
#               end
              </ul>
              <ul class="nav navbar-nav navbar-right">
                <li>
                  <a href="https://github.com/Kazuo256/luxproject">
                    GitHub Page
                  </a>
                </li>
              </ul>
            </div>
          </div>
          <div class="col-xs-0 col-md-1 col-lg-2"></div>
        </div>
      </div>
    </nav>

    <div class="row" style="height:5em"></div>
    <div class="row">
      <div class="col-xs-0 col-md-1 col-lg-2"></div>
      <div class="col-xs-12 col-md-10 col-lg-8">
        <div id="main">
      
#         local iter = ldoc.modules.iter
#         local M = ldoc.markup
        
          <!-- Menu -->
        
#         local function no_spaces(s) return s:gsub('%s','_') end
#         local function display_name(item)
#           if item.type == 'function' then return item.name..'&nbsp;'..item.args
#           else return item.name end
#         end
#         local function use_li(ls)
#           if #ls > 1 then return '<li>','</li>' else return '','' end
#         end
        
        
          <div id="content">
        
#           if module then
        
              <h1>
                $(module.name)
                <small>a LUX $(module.kind:gsub("s$", ""))</small>
              </h1>

              $(vspace(2))
              
              <p>$(M(module.summary))</p>
              <p>$(M(module.description))</p>
              
              $(vspace(2))
        
#             --- currently works for both Functions and Tables. The params
#             --- field either contains function parameters or table fields.
#             for kind, items in module.kinds() do
                <dl class="function">
#                 for item in items() do
                    <dt>
                      <a name = "$(item.name)"></a>
                      <strong>$(display_name(item))</strong>
                    </dt>
                    <dd>
                      $(M(item.summary))
                      $(M(item.description))
        
#                     if item.usage then
#                       local li,il = use_li(item.usage)
                        <h3>Usage:</h3>
                        <ul>
#                         for usage in iter(item.usage) do
                            $(li)
                            <pre class="example">$(ldoc.prettify(usage))</pre>
                            $(il)
#                         end -- for
                        </ul>
#                     end -- if usage
        
#                     if item.see then
#                       local li,il = use_li(item.see)
                        <h3>see also:</h3>
                        <ul>
#                         for see in iter(item.see) do
                            $(li)
                            <a href="$(see.mod).html#$(see.name)">
                              $(see.label)
                            </a>
                            $(il)
#                         end -- for
                        </ul>
#                     end -- if see
                    </dd>
#                 end -- for items
                </dl>
#             end -- for kinds
        
#           else -- if module
        
#             if ldoc.description then
                <p>$(M(ldoc.description))</p>
#             end
        
#           for kind, mods in ldoc.kinds() do
              <h2>$(kind)</h2>
#             kind = kind:lower()
#             for m in mods() do
                <table class="module_list">
        	        <tr>
        		        <td class="name">
                      <a href="$(no_spaces(kind))/$(m.name).html">
                        $(m.name)
                      </a>
                    </td>
        		        <td class="summary">$(M(m.summary))</td>
        	        </tr>
                </table>
#             end -- for modules
#           end -- for kinds
#         end -- if module
        
        </div> <!-- id="content" -->
      </div> <!-- id="main" -->
      <div id="about">
      </div> <!-- id="about" -->
      <div class="col-xs-0 col-md-1 col-lg-2"></div>
    </div> <!-- content row -->
  </div> <!-- class="container" -->
</body>
</html>

